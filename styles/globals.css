html,
body {
  /*dark mode*/
  --background-dark: #1d2125;
  --primary-dark: #f4f4f5;
  --secondary-dark: #e5a531;
  --caption-dark: #86898f;
  --decoA-dark: #e5a531;
  --decoB-dark: rgb(241, 77, 12);
  /*light mode*/
  --background-light: var(--primary-dark);
  --primary-light: #0f2f33;
  --secondary-light: #269292;
  --caption-light: #e9ecef;
  --decoA-light: hsl(180, 78%, 43%);
  --decoB-light: hsl(184, 80%, 28%);
  /*developer assist*/
  --border: 1px dashed magenta;

  padding: 0;
  margin: 0;
  font-size: 16px;
  font-family: 'Raleway', Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue,
    sans-serif, 'Major Mono Display';
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

/*App*/
.container {
  padding: 0 2rem;
  position: absolute;
  width: 100vw;
  height: 100vh;
  overflow-x: hidden;
  background-repeat: no-repeat;
  background-size: cover;
  transition: background-image 1s ease-in-out;
}

.dark {
  background-image: url(https://cdn.discordapp.com/attachments/1054960334751928350/1060557746644189325/ccnmagnoo_peacefull_dark_fortest_3642a19f-94c6-4ae3-93f3-fc67aee45fbc.png);
  background-color: var(--background-dark);
  color: var(--primary-dark);
}
.light {
  background-image: url(https://cdn.discordapp.com/attachments/1054960334751928350/1060552633431105616/ccnmagnoo_paradise_beach_calm_water_institutional_61782dd7-661a-4d44-9a9e-7c24adf3715d.png);
  background-color: var(--background-light);
  color: var(--primary-light);
}

.header {
  /* border: var(--border); */
  display: flex;
  gap: 1em;
  flex-direction: row;
  min-height: 3rem;
  position: relative;
  align-items: center;
  justify-content: right;
  width: 100%;
  padding: 5px;
}
.main {
  /* border: var(--border); */
  position: relative;
  min-height: 82vh;
  padding: 4rem 0;
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  border-radius: 5px;
  backdrop-filter: blur(3px);
}

.dark .main {
  box-shadow: 5px 5px 8px 5px rgba(0, 0, 0, 0.5);
  background-image: linear-gradient(
    120deg,
    rgba(0, 0, 0, 0.699) 20%,
    rgba(0, 0, 0, 0.425) 100%
  );
  background-blend-mode: darken;
}

.light .main {
  box-shadow: 5px 5px 8px 5px rgba(0, 0, 0, 0.05);
  background-image: linear-gradient(
    170deg,
    rgba(255, 255, 255, 0.788) 20%,
    rgba(255, 255, 255, 0.3) 100%
  );
}

.footer {
  /* border: var(--border); */
  display: flex;
  flex: 1;
  padding: 1rem 0;
  border-top: 1px solid var(--caption);
  justify-content: center;
  align-items: center;
  position: relative;
  bottom: 0;
  width: 100%;
  min-height: 50px;
}

.grid {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-wrap: wrap;
  max-width: 800px;
}

/*bigSwitch base */
.bigSwitch {
  --switchW: 350px;
  --switchH: 220px;
  --leverGap: 40px;
  --leverSize: calc(var(--switchH) + var(--leverGap));
  color: var(--primary-dark);
  border-radius: 1000px;
  border: solid 5px;
  position: relative;
  width: var(--switchW);
  height: var(--switchH);
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: inset -3px -3px 6px 6px rgba(0, 0, 0, 0.1);
  transition: all 0.2s ease-in-out;
  z-index: 1;
}

.dark .bigSwitch {
  border-color: rgba(0, 0, 0, 0.2);
}
@media (max-width: 800px) {
  .bigSwitch {
    --switchW: 200px;
    --switchH: 100px;
    --leverGap: 40px;
  }
}

.bigSwitch:hover {
  box-shadow: inset 0px 0px 6px 12px rgba(0, 0, 0, 0.2),
    0 0 5px 5px rgba(255, 255, 255, 0.1);
}

/*BS Lever üèí*/
.bigSwitch .lever {
  border-radius: 1000px;
  width: var(--leverSize);
  height: var(--leverSize);
  position: absolute;
  transition: left 1s ease-in-out;
  display: flex;
  cursor: pointer;
  align-items: center;
  justify-content: center;
}
/*üåí dark mode*/
.dark .bigSwitch .lever {
  background-color: black;
  left: calc(-1 * var(--leverGap));
}
/*üåû light mode*/
.light .bigSwitch .lever {
  border-radius: 1000px;
  background-color: var(--secondary-light);
  left: calc(var(--switchW) - var(--switchH));
}

.bigSwitch .lever::after {
  content: '';
  --border-width: 16px;
  position: absolute;
  border-radius: 1000px;
  width: calc(var(--leverSize) + var(--border-width));
  height: calc(var(--leverSize) + var(--border-width));
  z-index: -1;

  animation: 5s leverRotate linear infinite;
}

#profile-image {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
  width: 100%;
  height: 100%;
  overflow: hidden;
  border-radius: 200px;
  transition: all 1s ease-in-out;
  transform: unset;
}
.dark #profile-image {
  background-image: url(../assets/profile-dark.png);
  transform: scaleX(-1);
  filter: brightness(0.9) contrast(200%) saturate(20%);
}

.light #profile-image {
  background-image: url(../assets/profile-light.png);
  transform: scaleX(1);
  filter: brightness(110%) contrast(120%) saturate(140%);
}
.dark .bigSwitch .lever::after {
  background-image: linear-gradient(to right, var(--decoA-dark), var(--decoB-dark));
  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.2), -1px -1px 2px 1px var(--decoA-dark);
}
.light .bigSwitch .lever::after {
  background-image: linear-gradient(to right, var(--decoA-light), var(--decoB-light));
  box-shadow: 2px 2px 2px 2px rgba(0, 0, 0, 0.2), -1px -1px 2px 1px var(--decoA-light);
}

@keyframes leverRotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* Card ü•∏ */
.container .bigSwitch .card {
  --x-deform: 1;
  --y-deform: 0.45;
  --displacement: 75%; /*card asimetric displacement*/
  position: relative;
  transition: all 0.5s ease-in-out;
}

.container.dark .bigSwitch .card {
  transform: translateX(calc(1 * var(--displacement)));
}

.container.light .bigSwitch .card {
  transform: translateX(calc(-1 * var(--displacement)));
}
/*animated canvas inside card container*/
.card .canvas {
  display: -ms-flexbox;
  align-items: center;
  justify-content: center;
  padding: 0.5rem;
  width: calc(var(--leverSize) * var(--x-deform));
  height: calc(var(--leverSize) * var(--y-deform));
  border-radius: 5px;
}
.dark .card .canvas {
  background-color: rgba(0, 0, 0, 0.4);
  text-align: right;
}

.light .card .canvas {
  background-color: var(--secondary-light);
  text-align: left;
}
/* card header */
.card .canvas h4 {
  /* border: var(--border); */
  font-size: 1.5rem;
  margin: 0;
  font-family: 'Major Mono Display', monospace;
}
.dark .card .canvas h4 {
  color: var(--secondary-dark);
}
.light .card .canvas h4 {
  color: white;
}

/* Card paragraph */
.card .canvas p {
  /* border: var(--border); */
  font-size: 0.8rem;
}
.dark .card .canvas p {
  color: var(--caption-dark);
}
.light .card .canvas p {
  color: var(--caption-light);
}

@media (max-width: 800px) {
  .container .bigSwitch .card {
    --y-deform: 0.75;
    --displacement: 65%; /*card asimetric displacement*/
  }
  .card .canvas h4 {
    font-size: 1rem;
    margin: 0;
  }
  .card .canvas p {
    font-size: 0.8rem;
  }
}

ul,
article {
  padding: 0;
}
/*Left Section*/
.leftPanel {
  /* border: var(--border); */
  display: -ms-flexbox;
  position: absolute;
  left: 0;
  transition: all 0.1s ease-in-out;
  min-width: 180px; /*left panel width and METER width*/
  min-height: auto;
  margin: 2rem;
  padding: 0px;
  border-radius: 2px;
}
.leftPanel h6 {
  margin: 0 0 -12px 0;
  padding: 0;
}

@media (max-width: 800px) {
  .leftPanel {
    /* border: var(--border); */
    position: relative;
    display: flex;
    flex-wrap: wrap;
    max-width: 600px;
    left: 0;
    justify-content: center;
    top: 50px;
  }
  .leftPanel article {
    padding: 5px;
  }
}

/* Meter Measure üì∂ */
.meter {
  --font-size: 0.8rem;

  /* border: var(--border); */
  position: relative;
  list-style: none;
  cursor: pointer;
}

.dark .meter {
  color: var(--caption-dark);
}
.light .meter {
  color: var(--primary-light);
}

.meter:hover {
  font-weight: bold;
}

.meter .container {
  font-size: var(--font-size);
  text-transform: lowercase;
  position: relative;
  display: block;
  width: 100%;
  min-width: 100px; /*left panel width and METER width*/
  height: 100%;
  padding: 0;
  margin-bottom: 5px;
  overflow: visible;
}
.meter .container.left {
  text-align: left;
}
.meter .container.right {
  text-align: right;
}

/* meter Box */
.meter .container .box {
  border-radius: 10px;
  position: relative;
  overflow: hidden;
  width: 100%;
  height: 2.5px;
}
.dark .meter .container .box {
  /* border: 0.5px solid var(--secondary-dark); */
  background-color: black;
}
.light .meter .container .box {
  /* border: 0.5px solid var(--secondary-light); */
  background-color: var(--caption-light);
}
.bar {
  height: 100%;
  position: absolute;
  border-radius: 20px;
  width: 100%;
}
.bar.left {
  right: unset;
  left: 0;
  animation: barAnimationFromLeft 2s ease-out;
}
.bar.right {
  right: 0;
  left: unset;
  animation: barAnimationFromRight 2s ease-out;
}

@keyframes barAnimationFromLeft {
  0% {
    transform: translateX(-100px);
  }
  100% {
    transform: translateX(0);
  }
}
@keyframes barAnimationFromRight {
  0% {
    transform: translateX(100px);
  }
  100% {
    transform: translateX(0);
  }
}

@media (orientation: portrait), (min-height: 800px) {
  .meter .container .box {
    height: 5px;
  }
}

.dark .bar {
  background-image: linear-gradient(
    to right,
    var(--decoB-dark) 0%,
    var(--decoA-dark) 80%
  );
}
.light .bar {
  background-image: linear-gradient(
    to right,
    var(--decoB-light) 0%,
    var(--decoA-light) 80%
  );
}

.meter img {
  width: var(--font-size);
  height: var(--font-size);
}

.dark .meter img {
  filter: hue-rotate(0deg) grayscale(30%);
}
.light .meter img {
  filter: hue-rotate(0deg) grayscale(80%);
}

/* Comment dialog in skill constainer üì® */
.meter .commentDialog {
  --dialog-width: 120px;
  font-size: 0.65rem;
  display: unset;
  position: absolute;
  right: calc((var(--dialog-width) + 10px) * -1);
  top: 0;
  max-width: var(--dialog-width);
  min-height: 50px;
  text-align: start;
  padding: 0.4rem;
  border-radius: 5px;
  z-index: 3;
  backdrop-filter: blur(3px);
  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.1);
  text-transform: none;
  transition: 250ms ease-in-out;
  opacity: 0;
  transform: translateX(-20px);
}
.meter:hover .commentDialog {
  display: block;
  opacity: 1;
  transform: translateX(0px);
}

.dark .meter .commentDialog {
  background-color: rgba(0, 0, 0, 0.6);
}
.light .meter .commentDialog {
  background-color: var(--background-light);
}

@keyframes dialogIn {
  100% {
    transform: translateX(-0px);
    opacity: 0;
  }
}

/*dialog arrow*/
.meter .commentDialog::after {
  --arrow-size: 8px;
  --transparent: var(--arrow-size) solid transparent;
  content: '';
  position: absolute;
  border-top: var(--transparent);
  border-bottom: var(--transparent);
  width: 0;
  height: 0;
  left: calc(var(--arrow-size) * -1);
  top: 8px;
}

.dark .meter .commentDialog::after {
  border-right: var(--arrow-size) solid black;
}

.light .meter .commentDialog::after {
  border-right: var(--arrow-size) solid var(--secondary-light);
}

/*Right Section*/

.contactPanel {
  --logoSize: 20px;
  --logoPlate: 16px; /*size increase*/
  position: relative;
  display: flex;
  justify-content: space-evenly;
}
/* links container üîó */
.contactPanel .contact {
  position: relative;
  display: flex;
  padding: 5px;
  border-radius: 100%;
  width: calc(var(--logoSize) + var(--logoPlate));
  height: calc(var(--logoSize) + var(--logoPlate));
  align-items: center;
  justify-content: center;
  transition: 0.5s all ease-in-out;
}

.contact:hover {
  transform: scale(1.1);
  transition: 0.2s all ease-in-out;
  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.2);
}

.dark .contact {
  border: 2px solid var(--secondary-dark);
}
.light .contact {
  border: 2px solid white;
}
.contact .ico {
  width: var(--logoSize);
  height: var(--logoSize);
  margin: auto;
  background-repeat: no-repeat;
  background-position: center;
  background-size: var(--logoSize);
  transition: 0.01s all ease-in-out;
}

.dark .contact .ico {
  filter: brightness(0.5) sepia(2) hue-rotate(10deg) saturate(5);
}

.light .contact .ico {
  filter: brightness(0.98) sepia(1) hue-rotate(100deg) saturate(1.4);
}

/*right panel*/
.rightPanel {
  /* border: var(--border); */
  position: absolute;
  display: block;
  right: 0;
  margin: 2rem;
  min-width: 200px;
  align-items: right;
  text-align: right;
}

.interestPanel {
  /* border: var(--border); */
  display: -ms-flexbox;
  padding: 0;
}
@media (max-width: 800px) {
  .rightPanel {
    position: relative;
    align-items: center;
    text-align: center;
    right: unset;
  }

  .interestPanel {
    display: flex;
    flex-wrap: wrap;
    max-width: 600px;
    justify-content: center;
  }
}

#cv-container {
  position: absolute;
  display: flex;
  justify-items: center;
  width: min(585px, 100%);
  height: 100%;
  border: none;
  padding: 0;
  margin: 0;
  overflow: hidden;
}

#cv-container iframe {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  border: none;
  padding: 0;
  margin: 0;
}
